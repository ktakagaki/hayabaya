apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version =  '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.+'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.+'
}

defaultTasks 'runSmall', 'shower'

import java.awt.*

task shower << {
    Desktop.getDesktop().browse(new File("./build/reports/tests/index.html").toURI());
}

task fatJar(type: Jar) {
    //create a single Jar with all dependencies
    manifest {
        attributes 'Implementation-Title': 'Hayabaya',
                'Implementation-Version': version,
                'Main-Class': 'org.hayabaya.MainClass'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task(runSmall, dependsOn: 'classes', type: JavaExec) {
    main = 'org.hayabaya.MainClass'
    classpath = sourceSets.main.runtimeClasspath
    args = "i7cpu small 4".split().toList() // CPUname sampleSize Repetitions
    enableAssertions = true
}

task(runMedium, dependsOn: 'classes', type: JavaExec) {
    main = 'org.hayabaya.MainClass'
    classpath = sourceSets.main.runtimeClasspath
    args = "i7cpu medium 2".split().toList() // CPUname sampleSize Repetitions
    enableAssertions = true
}

task(runLarge, dependsOn: 'classes', type: JavaExec) {
    main = 'org.hayabaya.MainClass'
    classpath = sourceSets.main.runtimeClasspath
    args = "i7cpu large 1".split().toList() // CPUname sampleSize Repetitions
    enableAssertions = true
}

task(testTwoArgs, dependsOn: 'classes', type: JavaExec) {
    println "Trying 2 arguments"
    main = 'org.hayabaya.MainClass'
    classpath = sourceSets.main.runtimeClasspath
    args = "large 1".split().toList() // CPUname sampleSize Repetitions
    enableAssertions = true
}

